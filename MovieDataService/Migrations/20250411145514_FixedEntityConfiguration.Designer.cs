// <auto-generated />
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MovieDataService.Repository;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace MovieDataService.Migrations
{
    [DbContext(typeof(MovieDataContext))]
    [Migration("20250411145514_FixedEntityConfiguration")]
    partial class FixedEntityConfiguration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("MovieDataService.Entities.Genre", b =>
                {
                    b.Property<Guid>("UUID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.HasKey("UUID");

                    b.ToTable("Genres");
                });

            modelBuilder.Entity("MovieDataService.Entities.Movie", b =>
                {
                    b.Property<Guid>("UUID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.PrimitiveCollection<List<Guid>>("CastUUIDs")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid[]")
                        .HasDefaultValue(new List<Guid>());

                    b.Property<string>("Description")
                        .HasMaxLength(1000)
                        .HasColumnType("character varying(1000)");

                    b.Property<int>("Duration")
                        .HasColumnType("integer");

                    b.PrimitiveCollection<List<Guid>>("GenresUUIDs")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid[]")
                        .HasDefaultValue(new List<Guid>());

                    b.Property<Guid>("ProducerUUID")
                        .HasColumnType("uuid");

                    b.Property<double?>("Rating")
                        .HasColumnType("double precision");

                    b.Property<DateTime>("ReleaseDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.HasKey("UUID");

                    b.ToTable("Movies");
                });

            modelBuilder.Entity("MovieDataService.Entities.Person", b =>
                {
                    b.Property<Guid>("UUID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid?>("AvatarUUID")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("DateBirth")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Description")
                        .HasMaxLength(1000)
                        .HasColumnType("character varying(1000)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<string>("Nationality")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.HasKey("UUID");

                    b.ToTable("Persons");
                });
#pragma warning restore 612, 618
        }
    }
}
